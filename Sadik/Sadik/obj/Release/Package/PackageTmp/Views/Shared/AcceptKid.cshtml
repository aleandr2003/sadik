@model AcceptKidModel
@{
    Layout = null;
}
@{
    <h2>Новый ребенок</h2>
    int KindergartenId = ViewBag.KindergartenId;
    using (Html.BeginForm("Accept", "Kids", new { KindergartenId = KindergartenId }, FormMethod.Post, null))
    {
        @Html.LabelFor(x => x.FirstName, "Имя")
		@Html.TextBoxFor(x => x.FirstName, new { placeholder = "Александр" })
        @Html.ValidationMessageFor(x => x.FirstName)
        
        <br />
   		@Html.LabelFor(x => x.LastName, "Фамилия")
		@Html.TextBoxFor(x => x.LastName, new { placeholder = "Пушкин" })
        @Html.ValidationMessageFor(x => x.LastName)

        <br />
   		@Html.LabelFor(x => x.Patronymic, "Отчество")
		@Html.TextBoxFor(x => x.Patronymic, new { placeholder = "Сергеевич" })
        @Html.ValidationMessageFor(x => x.Patronymic)

		<br />
		@Html.LabelFor(x => x.DateOfBirth, "День рождения")
		@Html.TextBoxFor(x => x.DateOfBirth, new { @class="js_datetimebox"})
        @Html.ValidationMessageFor(x => x.DateOfBirth)

        <br />
		@Html.LabelFor(x => x.DateAccepted, "Принят в садик")
		@Html.TextBoxFor(x => x.DateAccepted, new { @class="js_datetimebox" })
        @Html.ValidationMessageFor(x => x.DateAccepted)
        <br />
        if (ViewBag.ErrorMessage != null)
        {
	        <div id="errorMessage" class="errorMessage">@ViewBag.ErrorMessage</div>
        }
        <br />
	    @Html.SubmitButton(null, "Добавить")
    }
}